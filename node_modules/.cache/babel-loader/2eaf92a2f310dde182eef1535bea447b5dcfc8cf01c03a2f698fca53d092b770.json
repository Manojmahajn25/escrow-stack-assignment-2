{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Manoj Mahajan\\\\Downloads\\\\stock-dashboard\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AVAILABLE_STOCKS = [\"GOOG\", \"TSLA\", \"AMZN\", \"META\", \"NVDA\"];\nfunction Dashboard({\n  email\n}) {\n  _s();\n  const [subscribed, setSubscribed] = useState([]);\n  const [prices, setPrices] = useState({});\n\n  // Generate random initial prices\n  const generateInitialPrices = () => {\n    const init = {};\n    AVAILABLE_STOCKS.forEach(stock => init[stock] = 1000 + Math.floor(Math.random() * 1000));\n    return init;\n  };\n\n  // On mount, set random prices\n  useEffect(() => {\n    setPrices(generateInitialPrices());\n  }, []);\n\n  // Update stock prices every second\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setPrices(prev => {\n        const updated = {\n          ...prev\n        };\n        subscribed.forEach(stock => {\n          const change = Math.floor(Math.random() * 20 - 10); // random up/down\n          updated[stock] = Math.max(0, updated[stock] + change);\n        });\n        return updated;\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [subscribed]);\n  const handleSubscribe = stock => {\n    if (!subscribed.includes(stock)) {\n      setSubscribed([...subscribed, stock]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome, \", email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD83D\\uDCC8 Live Stock Prices (auto-refreshing every second)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleSubscribe(e.target.value),\n      defaultValue: \"\",\n      className: \"dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        disabled: true,\n        children: \"Select stock to subscribe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), AVAILABLE_STOCKS.map(stock => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: stock,\n        children: stock\n      }, stock, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: subscribed.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: \"20px\"\n        },\n        children: \"Select stocks to view live data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this) : subscribed.map(stock => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: stock\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u20B9\", prices[stock]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)]\n      }, stock, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"WxAjwIToAglEUaueEpzsnHXjKY0=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AVAILABLE_STOCKS","Dashboard","email","_s","subscribed","setSubscribed","prices","setPrices","generateInitialPrices","init","forEach","stock","Math","floor","random","interval","setInterval","prev","updated","change","max","clearInterval","handleSubscribe","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","defaultValue","disabled","map","length","style","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/Manoj Mahajan/Downloads/stock-dashboard/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Dashboard.css\";\r\n\r\nconst AVAILABLE_STOCKS = [\"GOOG\", \"TSLA\", \"AMZN\", \"META\", \"NVDA\"];\r\n\r\nfunction Dashboard({ email }) {\r\n  const [subscribed, setSubscribed] = useState([]);\r\n  const [prices, setPrices] = useState({});\r\n\r\n  // Generate random initial prices\r\n  const generateInitialPrices = () => {\r\n    const init = {};\r\n    AVAILABLE_STOCKS.forEach(\r\n      (stock) => (init[stock] = 1000 + Math.floor(Math.random() * 1000))\r\n    );\r\n    return init;\r\n  };\r\n\r\n  // On mount, set random prices\r\n  useEffect(() => {\r\n    setPrices(generateInitialPrices());\r\n  }, []);\r\n\r\n  // Update stock prices every second\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setPrices((prev) => {\r\n        const updated = { ...prev };\r\n        subscribed.forEach((stock) => {\r\n          const change = Math.floor(Math.random() * 20 - 10); // random up/down\r\n          updated[stock] = Math.max(0, updated[stock] + change);\r\n        });\r\n        return updated;\r\n      });\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, [subscribed]);\r\n\r\n  const handleSubscribe = (stock) => {\r\n    if (!subscribed.includes(stock)) {\r\n      setSubscribed([...subscribed, stock]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h2>Welcome, {email}</h2>\r\n      <p>ðŸ“ˆ Live Stock Prices (auto-refreshing every second)</p>\r\n\r\n      <select\r\n        onChange={(e) => handleSubscribe(e.target.value)}\r\n        defaultValue=\"\"\r\n        className=\"dropdown\"\r\n      >\r\n        <option value=\"\" disabled>\r\n          Select stock to subscribe\r\n        </option>\r\n        {AVAILABLE_STOCKS.map((stock) => (\r\n          <option key={stock} value={stock}>\r\n            {stock}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <div className=\"cards\">\r\n        {subscribed.length === 0 ? (\r\n          <p style={{ marginTop: \"20px\" }}>Select stocks to view live data</p>\r\n        ) : (\r\n          subscribed.map((stock) => (\r\n            <div className=\"card\" key={stock}>\r\n              <h3>{stock}</h3>\r\n              <p>â‚¹{prices[stock]}</p>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}